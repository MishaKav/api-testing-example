name: Jest Coverage

on:
  pull_request:

jobs:
  jest-coverage:
    name: Jest Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: NPM Cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm

      - name: Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Tests
        run: npm run coverage

      # very basic, without links
      # - uses: vebr/jest-lcov-reporter@v0.2.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     lcov-file: ./coverage/lcov.info

      # can't setup
      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   with:
      #     name: JEST Tests # Name of the check run which will be created
      #     path: coverage/jest-*.xml # Path to test results
      #     reporter: jest-junit # Format of test results

      # too simple table
      # - uses: ArtiomTr/jest-coverage-report-action@v2

      # simple table
      # - uses: mattallty/jest-github-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # table with diff
      # - name: TestCoverage
      #   id: testCoverage
      #   uses: anuraag016/Jest-Coverage-Diff@master
      #   with:
      #     fullCoverageDiff: true
      #     runCommand: "npx jest --collectCoverageFrom='[\"src/**/*.{js,jsx,ts,tsx}\"]' --coverage --collectCoverage=true --coverageDirectory='./' --coverageReporters='json-summary' --forceExit"

      # broken
      # - uses: ziishaned/jest-reporter-action@0.1.1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     test-command: "npm jest --coverage"

      # broken, can't find my branch
      # - name: Generating coverage badges
      #   uses: jpb06/jest-badges-action@latest

      - uses: willcaul/jest-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          test-command: 'npm test'
